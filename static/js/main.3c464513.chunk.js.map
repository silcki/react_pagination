{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","pageChange","page","className","cn","disabled","href","onClick","map","active","items","App","useState","setCurrentPage","setPerPage","lastElement","firstElement","currentItems","slice","length","id","onChange","event","target","value","selected","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GAEtBI,EAAa,SAACC,GAAD,OAAkB,WAC/BA,IAASP,GACXC,EAAaM,KAgBjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAlBS,WACK,IAAhBZ,GACFC,EAAaD,EAAc,IAWzB,oBAUDK,EAAMQ,KAAI,SAAAN,GAAI,OACb,oBAEEC,UAAWC,IACT,YACA,CAAEK,OAAQd,IAAgBO,IAJ9B,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,GACVK,QAASN,EAAWC,GAJtB,SAMGA,KAZEA,MAgBT,oBAAIC,UAAWC,IACb,YACA,CAAEC,SAAUV,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QAzDS,WACXZ,IAAgBE,GAClBD,EAAaD,EAAc,IAkDzB,wBCzEFe,EAAQxB,EAAW,EAAG,IACzBsB,KAAI,SAAAlB,GAAC,qBAAYA,MAEPqB,EAAgB,WAC3B,MAAsCC,mBAAiB,GAAvD,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAA8BD,mBAAiB,GAA/C,mBAAOlB,EAAP,KAAgBoB,EAAhB,KACMC,EAAcpB,EAAcD,EAC5BsB,EAAeD,EAAcrB,EAE7BuB,EAAyBP,EAAMQ,MAAMF,EAAcD,GAWzD,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAe,EADhD,cACuDA,EAAeC,EAAaE,OADnF,eACgGT,EAAMS,OADtG,OAIA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,SAnBY,SAACC,GACrBR,GAAYQ,EAAMC,OAAOC,OACzBX,EAAe,IAaT,SAMG,CAAC,EAAG,EAAG,GAAI,IAAIL,KAAI,SAAAlB,GAAC,OACnB,wBAEEkC,MAAOlC,EACPmC,SAAUnC,IAAMI,EAHlB,SAKGJ,GAJIA,UAUb,uBAAOoC,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOiB,EAAMS,OACbzB,QAASA,EACTC,YAAaA,EACbC,aA9CiB,SAAC4B,GACtBX,EAAeW,MAgDb,6BACGP,EAAaT,KAAI,SAAAmB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCjEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3c464513.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (value: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n\n  const pageChange = (page: number) => () => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const nextPage = () => {\n    if (currentPage !== totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  const prevPage = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === 1 },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={prevPage}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn(\n            'page-item',\n            { active: currentPage === page },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={pageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={cn(\n        'page-item',\n        { disabled: currentPage === totalPages },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages}\n          onClick={nextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n  const lastElement = currentPage * perPage;\n  const firstElement = lastElement - perPage;\n\n  const currentItems: string[] = items.slice(firstElement, lastElement);\n\n  const pageChangeFunc = (value: number) => {\n    setCurrentPage(value);\n  };\n\n  const changePerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstElement + 1} - ${firstElement + currentItems.length} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={changePerPage}\n          >\n            {[3, 5, 10, 20].map(n => (\n              <option\n                key={n}\n                value={n}\n                selected={n === perPage}\n              >\n                {n}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={pageChangeFunc}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}